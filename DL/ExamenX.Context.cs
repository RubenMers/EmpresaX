//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EmpresaXEntities : DbContext
    {
        public EmpresaXEntities()
            : base("name=EmpresaXEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Producto> Productoes { get; set; }
        public virtual DbSet<Sucursal> Sucursals { get; set; }
        public virtual DbSet<SucursalProducto> SucursalProductoes { get; set; }
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<DetalleVenta> DetalleVentas { get; set; }
        public virtual DbSet<Venta> Ventas { get; set; }
    
        public virtual int ProductoAdd(ObjectParameter idProducto, string nombre, Nullable<int> codigoDeBarras, Nullable<int> cantidad, Nullable<decimal> precioUnitario, string logoTipo)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var codigoDeBarrasParameter = codigoDeBarras.HasValue ?
                new ObjectParameter("CodigoDeBarras", codigoDeBarras) :
                new ObjectParameter("CodigoDeBarras", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var precioUnitarioParameter = precioUnitario.HasValue ?
                new ObjectParameter("PrecioUnitario", precioUnitario) :
                new ObjectParameter("PrecioUnitario", typeof(decimal));
    
            var logoTipoParameter = logoTipo != null ?
                new ObjectParameter("LogoTipo", logoTipo) :
                new ObjectParameter("LogoTipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductoAdd", idProducto, nombreParameter, codigoDeBarrasParameter, cantidadParameter, precioUnitarioParameter, logoTipoParameter);
        }
    
        public virtual int ProductoDelete(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductoDelete", idProductoParameter);
        }
    
        public virtual ObjectResult<ProductoGetAll_Result> ProductoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductoGetAll_Result>("ProductoGetAll");
        }
    
        public virtual ObjectResult<ProductoGetByIdProducto_Result> ProductoGetByIdProducto(Nullable<int> idSucursalProducto)
        {
            var idSucursalProductoParameter = idSucursalProducto.HasValue ?
                new ObjectParameter("IdSucursalProducto", idSucursalProducto) :
                new ObjectParameter("IdSucursalProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductoGetByIdProducto_Result>("ProductoGetByIdProducto", idSucursalProductoParameter);
        }
    
        public virtual int SucursalAdd(ObjectParameter idSucursal, string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SucursalAdd", idSucursal, nombreParameter);
        }
    
        public virtual ObjectResult<SucursalGetAll_Result> SucursalGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SucursalGetAll_Result>("SucursalGetAll");
        }
    
        public virtual int SucursalProductoAdd(Nullable<int> idProducto, Nullable<int> idSucursal)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SucursalProductoAdd", idProductoParameter, idSucursalParameter);
        }
    
        public virtual ObjectResult<SucursalProductoGetAll_Result> SucursalProductoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SucursalProductoGetAll_Result>("SucursalProductoGetAll");
        }
    
        public virtual ObjectResult<SucursalGetByProducto_Result1> SucursalGetByProducto(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SucursalGetByProducto_Result1>("SucursalGetByProducto", idSucursalParameter);
        }
    
        public virtual int DetalleVentaAdd(Nullable<int> idVenta, Nullable<int> cantidad, Nullable<int> idSucursalProducto)
        {
            var idVentaParameter = idVenta.HasValue ?
                new ObjectParameter("IdVenta", idVenta) :
                new ObjectParameter("IdVenta", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var idSucursalProductoParameter = idSucursalProducto.HasValue ?
                new ObjectParameter("IdSucursalProducto", idSucursalProducto) :
                new ObjectParameter("IdSucursalProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DetalleVentaAdd", idVentaParameter, cantidadParameter, idSucursalProductoParameter);
        }
    
        public virtual int VentaAdd(ObjectParameter idVenta, Nullable<decimal> total, Nullable<int> idCliente)
        {
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VentaAdd", idVenta, totalParameter, idClienteParameter);
        }
    
        public virtual ObjectResult<ProductoGetById_Result> ProductoGetById(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductoGetById_Result>("ProductoGetById", idProductoParameter);
        }
    
        public virtual int ProductoUpdate(Nullable<int> idProducto, string nombre, Nullable<int> codigoDeBarras, Nullable<int> cantidad, Nullable<decimal> precioUnitario, string logoTipo)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var codigoDeBarrasParameter = codigoDeBarras.HasValue ?
                new ObjectParameter("CodigoDeBarras", codigoDeBarras) :
                new ObjectParameter("CodigoDeBarras", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var precioUnitarioParameter = precioUnitario.HasValue ?
                new ObjectParameter("PrecioUnitario", precioUnitario) :
                new ObjectParameter("PrecioUnitario", typeof(decimal));
    
            var logoTipoParameter = logoTipo != null ?
                new ObjectParameter("LogoTipo", logoTipo) :
                new ObjectParameter("LogoTipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductoUpdate", idProductoParameter, nombreParameter, codigoDeBarrasParameter, cantidadParameter, precioUnitarioParameter, logoTipoParameter);
        }
    
        public virtual int SucursalDelete(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SucursalDelete", idSucursalParameter);
        }
    
        public virtual int SucursalUpdate(Nullable<int> idSucursal, string nombre)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SucursalUpdate", idSucursalParameter, nombreParameter);
        }
    
        public virtual ObjectResult<SucursalGet_Result> SucursalGet(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SucursalGet_Result>("SucursalGet", idSucursalParameter);
        }
    }
}
